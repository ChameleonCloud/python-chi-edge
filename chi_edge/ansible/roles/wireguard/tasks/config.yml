---
- name: setup hostname
  ansible.builtin.hostname:
    name: "{{ inventory_hostname }}"

- name: setup wg_up.sh helper
  ansible.builtin.template:
    src: wg_up.sh
    dest: /usr/local/sbin/wg_up.sh
    mode: "0700"
    owner: root
    group: root

- name: setup dhcpcd hook
  ansible.builtin.copy:
    dest: "/usr/lib/dhcpcd/dhcpcd-hooks/40-chameleon"
    src: dhcpcd-hook
    owner: root
    group: root
    mode: 0744
  when: "'dhcpcd' in services"
  notify: reboot system

- name: setup networkd-dispatcher hook
  ansible.builtin.copy:
    dest: "/usr/lib/networkd-dispatcher/routable.d/40-chameleon"
    src: networkd-dispatcher-hook
    owner: root
    group: root
    mode: 0744
  when: "'networkd-dispatcher.service' in services"
  notify: reboot system

- name: create config dir
  ansible.builtin.file:
    name: "{{ wireguard_config_dir }}"
    state: directory

- name: generate keys
  vars:
    dest_path: "{{ wireguard_config_dir }}/{{ item.key }}.key"
  ansible.builtin.script:
    cmd: "gen_key.sh {{ dest_path }} {{ item.value.private_key | default('') }}"
  with_dict: "{{ wireguard_tunnels }}"
  changed_when: private_key.rc == 2
  register: private_key

- name: configure wg tunnels
  ansible.builtin.template:
    src: tunnel.conf.j2
    dest: "{{ wireguard_config_dir }}/{{ item.item.key }}.channel"
    mode: "0700"
    owner: root
    group: root
  vars:
    wg_private_key: "{{ item.stdout }}"
    wg_peers: "{{ item.item.value.peers }}"
  with_items: "{{ private_key.results }}"

- name: bind tunnels to addresses
  ansible.builtin.copy:
    content: "{{ item.value.ipv4 }}"
    dest: "{{ wireguard_config_dir }}/{{ item.key }}.ipv4"
  with_dict: "{{ wireguard_tunnels }}"

- name: register additional routes
  ansible.builtin.copy:
    content: "{{ item.value.routes | default([]) | join('\n') }}"
    dest: "{{ wireguard_config_dir }}/{{ item.key }}.routes"
  with_dict: "{{ wireguard_tunnels }}"
  when:
    - item.value.routes is defined
    - item.value.routes | length

- name: force reboot if needed
  meta: flush_handlers
